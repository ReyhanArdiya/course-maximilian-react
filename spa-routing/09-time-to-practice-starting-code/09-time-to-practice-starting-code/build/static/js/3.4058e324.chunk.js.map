{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","pages/QuoteDetail.jsx"],"names":["module","exports","HighlightedQuote","props","console","log","className","classes","quote","text","author","React","memo","CommentItem","item","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","submitFormHandler","event","preventDefault","commentData","current","value","quoteId","onFinishCommentAdd","useEffect","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","getAllComments","loadedComments","data","fetchComments","useCallback","length","onClick","QuoteDetail","getSingleQuote","loadedQuote","useParams","match","useRouteMatch","Card","NoQuotesFound","path","to","window","location","pathname","url"],"mappings":"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","file":"static/js/3.4058e324.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3rE92\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__PeVpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3zPe2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__3Ad3c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1fK7z\",\"loading\":\"NewCommentForm_loading__AqExV\",\"control\":\"NewCommentForm_control__2UGKO\",\"actions\":\"NewCommentForm_actions__2Z7I0\"};","import classes from \"./HighlightedQuote.module.css\";\nimport React from \"react\";\n\nconst HighlightedQuote = props => {\n\tconsole.log(\"meomere\");\n\treturn (\n\t\t<figure className={classes.quote}>\n\t\t\t<p>{props.text}</p>\n\t\t\t<figcaption>{props.author}</figcaption>\n\t\t</figure>\n\t);\n};\n\nexport default React.memo(HighlightedQuote);\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from \"./CommentItem\";\nimport classes from \"./CommentsList.module.css\";\n\nconst CommentsList = ({ comments }) => {\n\tconsole.log(comments);\n\treturn (\n\t\t<ul className={classes.comments}>\n\t\t\t{comments.map(comment => (\n\t\t\t\t<CommentItem key={comment.id} text={comment.text} />\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = props => {\n\tconst commentTextRef = useRef();\n\tconst { sendRequest, status, error } = useHttp(addComment);\n\t// const { id } = useParams();\n\n\tconst submitFormHandler = event => {\n\t\tevent.preventDefault();\n\n\t\t// optional: Could validate here\n\n\t\t// send comment to server\n\t\tsendRequest({\n\t\t\tcommentData: { text: commentTextRef.current.value },\n\t\t\tquoteId: props.id\n\t\t});\n\t};\n\n\tconst { onFinishCommentAdd } = props;\n\tuseEffect(() => {\n\t\tif (status === \"completed\" && !error) {\n\t\t\tonFinishCommentAdd();\n\t\t}\n\t}, [error, onFinishCommentAdd, status]);\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={submitFormHandler}>\n\t\t\t{status === \"pending\" && (\n\t\t\t\t<div className=\"centered\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className={classes.control} onSubmit={submitFormHandler}>\n\t\t\t\t<label htmlFor=\"comment\">Your Comment</label>\n\t\t\t\t<textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n\t\t\t</div>\n\t\t\t<div className={classes.actions}>\n\t\t\t\t<button className=\"btn\">Add Comment</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default NewCommentForm;\n","import { useState, useEffect, useCallback } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./Comments.module.css\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = ({ id }) => {\n\tconst [isAddingComment, setIsAddingComment] = useState(false);\n\tconst {\n\t\tsendRequest,\n\t\tstatus,\n\t\tdata: loadedComments\n\t} = useHttp(getAllComments);\n\n\tconst startAddCommentHandler = () => {\n\t\tsetIsAddingComment(true);\n\t};\n\n\tuseEffect(() => {\n\t\tsendRequest(id);\n\t}, [id, sendRequest]);\n\n\tconst fetchComments = useCallback(() => {\n\t\tsendRequest(id);\n\t}, [id, sendRequest]);\n\n\tlet comments;\n\tif (status === \"pending\") {\n\t\tcomments = (\n\t\t\t<div className=\"centered\">\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t);\n\t} else if (\n\t\tstatus === \"completed\" &&\n\t\tloadedComments &&\n\t\tloadedComments.length\n\t) {\n\t\tcomments = <CommentsList comments={loadedComments} />;\n\t} else {\n\t\tcomments = <p className=\"centered\">No Comments Added</p>;\n\t}\n\n\treturn (\n\t\t<section className={classes.comments}>\n\t\t\t<h2>User Comments</h2>\n\t\t\t{!isAddingComment && (\n\t\t\t\t<button className=\"btn\" onClick={startAddCommentHandler}>\n\t\t\t\t\tAdd a Comment\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{isAddingComment && (\n\t\t\t\t<NewCommentForm id={id} onFinishCommentAdd={fetchComments} />\n\t\t\t)}\n\t\t\t{comments}\n\t\t</section>\n\t);\n};\n\nexport default Comments;\n","import { useParams } from \"react-router-dom\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport Comments from \"../components/comments/Comments\";\r\n// import DUMMY_QUOTES from \"../store/DUMMY_QUOTES\";\r\n\r\nimport Card from \"../components/UI/Card\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst QuoteDetail = () => {\r\n\tconst {\r\n\t\tsendRequest,\r\n\t\tstatus,\r\n\t\tdata: loadedQuote,\r\n\t\terror\r\n\t} = useHttp(getSingleQuote, true);\r\n\tconst { id } = useParams();\r\n\tconst match = useRouteMatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tsendRequest(id);\r\n\t}, [id, sendRequest]);\r\n\r\n\tif (status === \"pending\") {\r\n\t\treturn (\r\n\t\t\t<div className=\"centered\">\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (!loadedQuote.text) {\r\n\t\treturn (\r\n\t\t\t<Card>\r\n\t\t\t\t<NoQuotesFound />\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n\r\n\tif (error) {\r\n\t\treturn <p className=\"centered focused\">{error}</p>;\r\n\t}\r\n\r\n\tconst { author, text } = loadedQuote;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HighlightedQuote author={author} text={text} />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path={`${match.path}/comments`}>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Comments id={id} />\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path={`${match.path}`}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tclassName=\"btn--flat centered\"\r\n\t\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\t\twindow.location.pathname ===\r\n\t\t\t\t\t\t\t\t`${match.url}/comments`\r\n\t\t\t\t\t\t\t\t\t? `${match.url}`\r\n\t\t\t\t\t\t\t\t\t: `${match.url}/comments`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLoad Comments\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}