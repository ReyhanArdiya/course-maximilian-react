{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/quotes/QuoteForm.js","pages/NewQuote.jsx"],"names":["module","exports","QuoteForm","onAddQuote","isLoading","authorInputRef","useRef","textInputRef","useState","setIsFormActive","when","message","loc","console","log","Card","onFocus","className","classes","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","author","text","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","quotes","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","replace","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yGCwEtHC,EAnEG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAC1BC,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAwCE,oBAAS,GAAjD,mBAAqBC,GAArB,WAiBA,OACC,qCACC,cAAC,IAAD,CACCC,MAAM,EACNC,QAAS,SAAAC,GAAG,OACXC,QAAQC,IAAIF,IACZ,kEAGF,cAACG,EAAA,EAAD,UACC,uBACCC,QAfgB,WACnBP,GAAgB,IAebQ,UAAWC,IAAQC,KACnBC,SA5BJ,SAA2BC,GAC1BA,EAAMC,iBAEN,IAAMC,EAAgBlB,EAAemB,QAAQC,MACvCC,EAAcnB,EAAaiB,QAAQC,MAIzCtB,EAAW,CAAEwB,OAAQJ,EAAeK,KAAMF,KAiBxC,UAKEtB,GACA,qBAAKa,UAAWC,IAAQW,QAAxB,SACC,cAACC,EAAA,EAAD,MAIF,sBAAKb,UAAWC,IAAQa,QAAxB,UACC,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK9B,OAErC,sBAAKY,UAAWC,IAAQa,QAAxB,UACC,uBAAOC,QAAQ,OAAf,kBACA,0BACCE,GAAG,OACHE,KAAK,IACLD,IAAK5B,OAGP,qBAAKU,UAAWC,IAAQmB,QAAxB,SACC,wBACCC,QAAS,kBAAM7B,GAAgB,IAC/BQ,UAAU,MAFX,kC,gBCtBSsB,UA/BE,SAAC,GAAe,EAAbC,OAAc,IAC3BC,EAAUC,cAChB,EAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAcrBC,qBAAU,WACM,cAAXD,GACHL,EAAQO,QAAQ,aAEf,CAACP,EAASK,IAMb,OACC,cAAC,EAAD,CAAW1C,UAAsB,YAAX0C,EAAsB3C,WALzB,SAAA8C,GACnBJ,EAAYI","file":"static/js/4.49e10162.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3fd1e\",\"loading\":\"QuoteForm_loading__3qfRc\",\"control\":\"QuoteForm_control__3kKcc\",\"actions\":\"QuoteForm_actions__LhNbA\"};","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = ({ onAddQuote, isLoading }) => {\n\tconst authorInputRef = useRef();\n\tconst textInputRef = useRef();\n\tconst [isFormActive, setIsFormActive] = useState(false);\n\n\tfunction submitFormHandler(event) {\n\t\tevent.preventDefault();\n\n\t\tconst enteredAuthor = authorInputRef.current.value;\n\t\tconst enteredText = textInputRef.current.value;\n\n\t\t// optional: Could validate here\n\n\t\tonAddQuote({ author: enteredAuthor, text: enteredText });\n\t}\n\n\tconst formFocused = () => {\n\t\tsetIsFormActive(true);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Prompt\n\t\t\t\twhen={true}\n\t\t\t\tmessage={loc =>\n\t\t\t\t\tconsole.log(loc) ||\n\t\t\t\t\t\"Are you sure you want to leave? All your quote will be lost!\"\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<Card>\n\t\t\t\t<form\n\t\t\t\t\tonFocus={formFocused}\n\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\tonSubmit={submitFormHandler}\n\t\t\t\t>\n\t\t\t\t\t{isLoading && (\n\t\t\t\t\t\t<div className={classes.loading}>\n\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor=\"author\">Author</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"author\" ref={authorInputRef} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor=\"text\">Text</label>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tid=\"text\"\n\t\t\t\t\t\t\trows=\"5\"\n\t\t\t\t\t\t\tref={textInputRef}\n\t\t\t\t\t\t></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() => setIsFormActive(false)}\n\t\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd Quote\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</Card>\n\t\t</>\n\t);\n};\n\nexport default QuoteForm;\n","import { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\n// let counter = 3;\r\nconst NewQuote = ({ quotes }) => {\r\n\tconst history = useHistory();\r\n\tconst { sendRequest, status } = useHttp(addQuote);\r\n\r\n\t/* const addNewQuote = ({ author, text }) => {\r\n\t\tquotes.push({\r\n\t\t\tauthor,\r\n\t\t\ttext,\r\n\t\t\tcomments: [],\r\n\t\t\tid: counter\r\n\t\t});\r\n\t\tcounter++;\r\n\r\n\t\thistory.replace(\"/quotes\");\r\n\t}; */\r\n\r\n\tuseEffect(() => {\r\n\t\tif (status === \"completed\") {\r\n\t\t\thistory.replace(\"/quotes\");\r\n\t\t}\r\n\t}, [history, status]);\r\n\r\n\tconst addNewQuote = quoteData => {\r\n\t\tsendRequest(quoteData);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<QuoteForm isLoading={status === \"pending\"} onAddQuote={addNewQuote} />\r\n\t);\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}